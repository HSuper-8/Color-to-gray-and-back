Projeto Final - Introdução ao Processamento de Imagens - 01/2018
################################################################
Alunos: Eduardo Lemos Rocha - 170009157
	Hevelyn Sthefany Lima de Carvalho - 170059031
################################################################
Linguagem Escolhida: Python 3.5
Bibliotecas Necessárias para a execução dos programas:
- cv2
- numpy
- pywt
- glob
- pathlib
################################################################

Estrutura do Programa
################################################################

O programa foi dividido em dois sub-diretórios, uma pasta chamada "FirstAttempt" que irá conter os arquivos referentes a primeira tentativa do processo descrito no paper escolhido. Como lá descrito, a primeira tentativa abordada não é suficiente para garantir todas as condições necessárias explicadas e descritas tanto no paper original quanto no documento criado pelos alunos do referente grupo. Prosseguindo, obtemos a pasta "SecondAttempt" na qual contém todos os arquivos referentes a segunda e última tentativa de execução do processo já mencionado anteriormente.
Todos os arquivos existentes nas duas pastas estão comentados com o intuito de deixar claro sobre o que exatamente aquele módulo é responsável, tentando ao máximo deixar com que a leitura simultânea do código junto ao paper original escolhido forneça um alto entendimento do processo como um todo.

################################################################

Como o programa funciona
################################################################

Como dito no tópico anterior, o programa foi dividido em dois segmentos distintos. Para a execução da primeira etapa, basta executar o arquivo "Main.py" contido na pasta "FirstAttempt". Por fim, para obter-se os resultados da segunda etapa basta executar o arquivo "Main.py" contido na pasta "SecondAttempt".

Pensando-se em resultados, a primeira etapa deve fornecer dentro do diretório "./FirstAttempt/Images". Além da imagem usada como exemplo ("Lena.png") será fornecido uma imagem texturizada da camada Y, uma imagem com cores recuperadas sem nenhuma simulação (explicado no documento dos alunos), e por fim uma recuperação com a tal simulação mostrando os resultados previstos no paper escolhido. Como informação adicional, esse segmento demorou entre 120-150 segundos para ser executado dentro das condições padrões, isto é, executando o programa no seu estado atual (executado no computador de um dos alunos).

Finalmente, em relação aos resultados da segunda e última etapa, diretórios serão criados para conter cada tipo de imagem, auxiliando uma análise posterior. Assim, diretórios que irão conter as imagens texturizadas com simulação (explicado no documento dos alunos), e sem simulação, e diretórios que irão conter os respectivos resultados da re-incorporação de cores de cada um dos casos ditos serão criados. Além disso, será mostrado na tela os valores PSNR para aquelas imagens, dentro das condições padrões, isto é, executando o programa no seu estado atual. Como informação bonûs, esse segmento final demorou entre 180-220 segundos para ser executado dentro das condições padrões (executado no computador de um dos alunos).

################################################################

Observações
################################################################

Observação 1: É de suma importância para o funcionamento ideal do programa, que nenhum dos arquivos das pastas sejam misturados e/ou trocados, visto que alguns deles, mesmo possuindo nomes idênticos, realizam funções diferentes.

Observação 2: É essencial que todos os arquivos de cada pasta permaneçam na mesma, visto que muitos dos arquivos funcionam como módulos para outros arquivos.

Observação 3: É estritamente proibido alterar nomes de pastas e/ou arquivos .py contidos em qualquer diretório.

Observação 4: Caso deseja-se, para testes adjacentes, incluir novas imagens, respeitando o tipo do arquivo (".tiff", ".png", etc), é importante para o cálculo dos valores PSNR que os nomes das imagens estejam com letra maiúsculas, visto que dentro do programa a ordem em que as imagens são lidas e comparadas umas com as outras depende da ordem alfabética.

Observação 5: Todas as imagens, com exceção da "Tiger.png" e da "Lena.png", foram obtidas no mesmo banco de imagens descrito no artigo escolhido (USC database), tendo seus formatos alterados para ".png". Dentre as duas que fugiram dessa regra, a primeira descrita foi escolhida aleatoriamente na internet, com a justificativa de possuir um tamanho distinto das outras encontras do database. Por fim, "Lena.png" foi escolhida por ser muito comum seu uso em trabalhos dessa natureza. De qualquer forma, todas as imagens utilizadas estão com seus direitos autorais reservados as fontes origianais de busca, seja o database USC ou os sites que possuiam as imagens escolhidas não encontradas no banco de imagens.

Observação 6: Referente a segunda etapa do programa, foi mantido para variáveis no programa K = 4 e um valor máximo de 7 imagens, sendo essas do tipo ".png". A variável K possui papel importante no programa e foi explicado durante a apresentação do grupo e descrito dentro do próprio artigo escolhido. Qualquer alteração para testes adjacentes, como mudar o valor de K e alterar a quantidade de imagens e/ou seu tipo, é recomendável cautela, pois o programa foi montado usufruindo-se de módulos auxiliares, então cada parâmetro tem uma influência enorme no resultado final.

Observação 7: Todo crédito intelectual mostrado na apresentação dos alunos e neste programa é de total mérito dos autores do artigo escolhido (Ricardo L. de Queiroz e Karen M. Braun).
